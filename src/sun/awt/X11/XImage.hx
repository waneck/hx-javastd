package sun.awt.X11;
//// This file is an automatically generated file, please do not edit this file, modify the WrapperGenerator.java file instead !
extern class XImage extends sun.awt.X11.XWrapperBase
{
	@:overload @:public @:static public static function getSize() : Int;
	
	@:overload @:public override public function getDataSize() : Int;
	
	@:overload @:public override public function getPData() : haxe.Int64;
	
	@:overload @:public public function new(addr : haxe.Int64) : Void;
	
	@:overload @:public public function new() : Void;
	
	@:overload @:public public function dispose() : Void;
	
	@:overload @:public public function get_width() : Int;
	
	@:overload @:public public function set_width(v : Int) : Void;
	
	@:overload @:public public function get_height() : Int;
	
	@:overload @:public public function set_height(v : Int) : Void;
	
	@:overload @:public public function get_xoffset() : Int;
	
	@:overload @:public public function set_xoffset(v : Int) : Void;
	
	@:overload @:public public function get_format() : Int;
	
	@:overload @:public public function set_format(v : Int) : Void;
	
	@:overload @:public public function get_data(index : Int) : java.StdTypes.Int8;
	
	@:overload @:public public function get_data() : haxe.Int64;
	
	@:overload @:public public function set_data(v : haxe.Int64) : Void;
	
	@:overload @:public public function get_byte_order() : Int;
	
	@:overload @:public public function set_byte_order(v : Int) : Void;
	
	@:overload @:public public function get_bitmap_unit() : Int;
	
	@:overload @:public public function set_bitmap_unit(v : Int) : Void;
	
	@:overload @:public public function get_bitmap_bit_order() : Int;
	
	@:overload @:public public function set_bitmap_bit_order(v : Int) : Void;
	
	@:overload @:public public function get_bitmap_pad() : Int;
	
	@:overload @:public public function set_bitmap_pad(v : Int) : Void;
	
	@:overload @:public public function get_depth() : Int;
	
	@:overload @:public public function set_depth(v : Int) : Void;
	
	@:overload @:public public function get_bytes_per_line() : Int;
	
	@:overload @:public public function set_bytes_per_line(v : Int) : Void;
	
	@:overload @:public public function get_bits_per_pixel() : Int;
	
	@:overload @:public public function set_bits_per_pixel(v : Int) : Void;
	
	@:overload @:public public function get_red_mask() : haxe.Int64;
	
	@:overload @:public public function set_red_mask(v : haxe.Int64) : Void;
	
	@:overload @:public public function get_green_mask() : haxe.Int64;
	
	@:overload @:public public function set_green_mask(v : haxe.Int64) : Void;
	
	@:overload @:public public function get_blue_mask() : haxe.Int64;
	
	@:overload @:public public function set_blue_mask(v : haxe.Int64) : Void;
	
	@:overload @:public public function get_obdata(index : Int) : haxe.Int64;
	
	@:overload @:public public function get_obdata() : haxe.Int64;
	
	@:overload @:public public function set_obdata(v : haxe.Int64) : Void;
	
	@:overload @:public public function get_f_create_image(index : Int) : haxe.Int64;
	
	@:overload @:public public function get_f_create_image() : haxe.Int64;
	
	@:overload @:public public function set_f_create_image(v : haxe.Int64) : Void;
	
	@:overload @:public public function get_f_destroy_image(index : Int) : haxe.Int64;
	
	@:overload @:public public function get_f_destroy_image() : haxe.Int64;
	
	@:overload @:public public function set_f_destroy_image(v : haxe.Int64) : Void;
	
	@:overload @:public public function get_f_get_pixel(index : Int) : haxe.Int64;
	
	@:overload @:public public function get_f_get_pixel() : haxe.Int64;
	
	@:overload @:public public function set_f_get_pixel(v : haxe.Int64) : Void;
	
	@:overload @:public public function get_f_put_pixel(index : Int) : haxe.Int64;
	
	@:overload @:public public function get_f_put_pixel() : haxe.Int64;
	
	@:overload @:public public function set_f_put_pixel(v : haxe.Int64) : Void;
	
	@:overload @:public public function get_f_sub_image(index : Int) : haxe.Int64;
	
	@:overload @:public public function get_f_sub_image() : haxe.Int64;
	
	@:overload @:public public function set_f_sub_image(v : haxe.Int64) : Void;
	
	@:overload @:public public function get_f_add_pixel(index : Int) : haxe.Int64;
	
	@:overload @:public public function get_f_add_pixel() : haxe.Int64;
	
	@:overload @:public public function set_f_add_pixel(v : haxe.Int64) : Void;
	
	
}
