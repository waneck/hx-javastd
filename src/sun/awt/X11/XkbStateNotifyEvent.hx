package sun.awt.X11;
//// This file is an automatically generated file, please do not edit this file, modify the WrapperGenerator.java file instead !
extern class XkbStateNotifyEvent extends sun.awt.X11.XWrapperBase
{
	@:overload public static function getSize() : Int;
	
	@:overload override public function getDataSize() : Int;
	
	@:overload override public function getPData() : haxe.Int64;
	
	@:overload public function new(addr : haxe.Int64) : Void;
	
	@:overload public function new() : Void;
	
	@:overload public function dispose() : Void;
	
	@:overload public function get_type() : Int;
	
	@:overload public function set_type(v : Int) : Void;
	
	@:overload public function get_serial() : haxe.Int64;
	
	@:overload public function set_serial(v : haxe.Int64) : Void;
	
	@:overload public function get_send_event() : Bool;
	
	@:overload public function set_send_event(v : Bool) : Void;
	
	@:overload public function get_display() : haxe.Int64;
	
	@:overload public function set_display(v : haxe.Int64) : Void;
	
	@:overload public function get_time() : haxe.Int64;
	
	@:overload public function set_time(v : haxe.Int64) : Void;
	
	@:overload public function get_xkb_type() : Int;
	
	@:overload public function set_xkb_type(v : Int) : Void;
	
	@:overload public function get_device() : Int;
	
	@:overload public function set_device(v : Int) : Void;
	
	@:overload public function get_changed() : Int;
	
	@:overload public function set_changed(v : Int) : Void;
	
	@:overload public function get_group() : Int;
	
	@:overload public function set_group(v : Int) : Void;
	
	@:overload public function get_base_group() : Int;
	
	@:overload public function set_base_group(v : Int) : Void;
	
	@:overload public function get_latched_group() : Int;
	
	@:overload public function set_latched_group(v : Int) : Void;
	
	@:overload public function get_locked_group() : Int;
	
	@:overload public function set_locked_group(v : Int) : Void;
	
	@:overload public function get_mods() : Int;
	
	@:overload public function set_mods(v : Int) : Void;
	
	@:overload public function get_base_mods() : Int;
	
	@:overload public function set_base_mods(v : Int) : Void;
	
	@:overload public function get_latched_mods() : Int;
	
	@:overload public function set_latched_mods(v : Int) : Void;
	
	@:overload public function get_locked_mods() : Int;
	
	@:overload public function set_locked_mods(v : Int) : Void;
	
	@:overload public function get_compat_state() : Int;
	
	@:overload public function set_compat_state(v : Int) : Void;
	
	@:overload public function get_grab_mods() : java.StdTypes.Int8;
	
	@:overload public function set_grab_mods(v : java.StdTypes.Int8) : Void;
	
	@:overload public function get_compat_grab_mods() : java.StdTypes.Int8;
	
	@:overload public function set_compat_grab_mods(v : java.StdTypes.Int8) : Void;
	
	@:overload public function get_lookup_mods() : java.StdTypes.Int8;
	
	@:overload public function set_lookup_mods(v : java.StdTypes.Int8) : Void;
	
	@:overload public function get_compat_lookup_mods() : java.StdTypes.Int8;
	
	@:overload public function set_compat_lookup_mods(v : java.StdTypes.Int8) : Void;
	
	@:overload public function get_ptr_buttons() : Int;
	
	@:overload public function set_ptr_buttons(v : Int) : Void;
	
	@:overload public function get_keycode() : Int;
	
	@:overload public function set_keycode(v : Int) : Void;
	
	@:overload public function get_event_type() : java.StdTypes.Int8;
	
	@:overload public function set_event_type(v : java.StdTypes.Int8) : Void;
	
	@:overload public function get_req_major() : java.StdTypes.Int8;
	
	@:overload public function set_req_major(v : java.StdTypes.Int8) : Void;
	
	@:overload public function get_req_minor() : java.StdTypes.Int8;
	
	@:overload public function set_req_minor(v : java.StdTypes.Int8) : Void;
	
	
}
