package org.omg.PortableServer;
/*
* Copyright (c) 2001, Oracle and/or its affiliates. All rights reserved.
* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
*
* This code is free software; you can redistribute it and/or modify it
* under the terms of the GNU General Public License version 2 only, as
* published by the Free Software Foundation.  Oracle designates this
* particular file as subject to the "Classpath" exception as provided
* by Oracle in the LICENSE file that accompanied this code.
*
* This code is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
* version 2 for more details (a copy is included in the LICENSE file that
* accompanied this code).
*
* You should have received a copy of the GNU General Public License version
* 2 along with this work; if not, write to the Free Software Foundation,
* Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
*
* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
* or visit www.oracle.com if you need additional information or have any
* questions.
*/
/**
* org/omg/PortableServer/CurrentHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.1"
* from ../../../../src/share/classes/org/omg/PortableServer/poa.idl
* Tuesday, October 23, 2001 1:17:01 PM PDT
*/
/**
* The PortableServer::Current interface, derived from
* CORBA::Current, provides method implementations with
* access to the identity of the object on which the
* method was invoked. The Current interface is provided
* to support servants that implement multiple objects,
* but can be used within the context of POA-dispatched
* method invocations on any servant. To provide location
* transparency, ORBs are required to support use of
* Current in the context of both locally and remotely
* invoked operations. An instance of Current can be
* obtained by the application by issuing the
* CORBA::ORB::resolve_initial_references("POACurrent")
* operation. Thereafter, it can be used within the
* context of a method dispatched by the POA to obtain
* the POA and ObjectId that identify the object on
* which that operation was invoked.
*/
extern class CurrentHelper
{
	@:overload @:public @:static public static function insert(a : org.omg.CORBA.Any, that : org.omg.PortableServer.Current) : Void;
	
	@:overload @:public @:static public static function extract(a : org.omg.CORBA.Any) : org.omg.PortableServer.Current;
	
	@:overload @:synchronized @:public @:static public static function type() : org.omg.CORBA.TypeCode;
	
	@:overload @:public @:static public static function id() : String;
	
	@:overload @:public @:static public static function read(istream : org.omg.CORBA.portable.InputStream) : org.omg.PortableServer.Current;
	
	@:overload @:public @:static public static function write(ostream : org.omg.CORBA.portable.OutputStream, value : org.omg.PortableServer.Current) : Void;
	
	@:overload @:public @:static public static function narrow(obj : org.omg.CORBA.Object) : org.omg.PortableServer.Current;
	
	
}
