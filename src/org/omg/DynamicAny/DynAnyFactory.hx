package org.omg.DynamicAny;
/**
* org/omg/DynamicAny/DynAnyFactory.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ../../../../src/share/classes/org/omg/DynamicAny/DynamicAny.idl
* Thursday, February 21, 2013 9:14:03 AM UTC
*/
/**
* DynAny objects can be created by invoking operations on the DynAnyFactory object.
* Generally there are only two ways to create a DynAny object:
* <UL>
* <LI>invoking an operation on an existing DynAny object
* <LI>invoking an operation on a DynAnyFactory object
* </UL>
* A constructed DynAny object supports operations that enable the creation of new DynAny
* objects encapsulating access to the value of some constituent.
* DynAny objects also support the copy operation for creating new DynAny objects.
* A reference to the DynAnyFactory object is obtained by calling ORB.resolve_initial_references()
* with the identifier parameter set to the string constant "DynAnyFactory".
* <P>Dynamic interpretation of an any usually involves creating a DynAny object using create_dyn_any()
* as the first step. Depending on the type of the any, the resulting DynAny object reference can be narrowed
* to a DynFixed, DynStruct, DynSequence, DynArray, DynUnion, DynEnum, or DynValue object reference.
* <P>Dynamic creation of an any involves creating a DynAny object using create_dyn_any_from_type_code(),
* passing the TypeCode associated with the value to be created. The returned reference is narrowed to one of
* the complex types, such as DynStruct, if appropriate. Then, the value can be initialized by means of
* invoking operations on the resulting object. Finally, the to_any operation can be invoked
* to create an any value from the constructed DynAny.
*/
extern interface DynAnyFactory extends org.omg.DynamicAny.DynAnyFactoryOperations extends org.omg.CORBA.Object extends org.omg.CORBA.portable.IDLEntity
{
	
}
