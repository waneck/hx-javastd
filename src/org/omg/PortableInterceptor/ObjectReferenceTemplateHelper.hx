package org.omg.PortableInterceptor;
/**
* org/omg/PortableInterceptor/ObjectReferenceTemplateHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ../../../../src/share/classes/org/omg/PortableInterceptor/Interceptors.idl
* Thursday, February 21, 2013 9:14:02 AM UTC
*/
/** The object reference template.  An instance of this must
* exist for each object adapter created in an ORB.  The server_id,
* orb_id, and adapter_name attributes uniquely identify this template
* within the scope of an IMR.  Note that adapter_id is similarly unique
* within the same scope, but it is opaque, and less useful in many
* cases.
*/
extern class ObjectReferenceTemplateHelper
{
	@:overload @:public @:static public static function insert(a : org.omg.CORBA.Any, that : org.omg.PortableInterceptor.ObjectReferenceTemplate) : Void;
	
	@:overload @:public @:static public static function extract(a : org.omg.CORBA.Any) : org.omg.PortableInterceptor.ObjectReferenceTemplate;
	
	@:overload @:synchronized @:public @:static public static function type() : org.omg.CORBA.TypeCode;
	
	@:overload @:public @:static public static function id() : String;
	
	@:overload @:public @:static public static function read(istream : org.omg.CORBA.portable.InputStream) : org.omg.PortableInterceptor.ObjectReferenceTemplate;
	
	@:overload @:public @:static public static function write(ostream : org.omg.CORBA.portable.OutputStream, value : org.omg.PortableInterceptor.ObjectReferenceTemplate) : Void;
	
	
}
