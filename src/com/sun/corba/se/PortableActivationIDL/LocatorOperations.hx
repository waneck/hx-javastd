package com.sun.corba.se.PortableActivationIDL;
/**
* com/sun/corba/se/PortableActivationIDL/LocatorOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ../../../../src/share/classes/com/sun/corba/se/PortableActivationIDL/activation.idl
* Thursday, February 21, 2013 9:14:13 AM UTC
*/
extern interface LocatorOperations
{
	/** locate server - returns the port with a specific type for all registered
		* ORBs of an active server.
		* Starts the server if it is not already running.
		*/
	@:overload public function locateServer(serverId : String, endPoint : String) : com.sun.corba.se.PortableActivationIDL.LocatorPackage.ServerLocationPerType;
	
	/** locate server - returns all ports registered with a specified ORB for
		* an active server
		* Starts the server if it is not already running.
		*/
	@:overload public function locateServerForORB(serverId : String, orbId : String) : com.sun.corba.se.PortableActivationIDL.LocatorPackage.ServerLocationPerORB;
	
	/** get the port for the endpoint of the locator
		*/
	@:overload public function getEndpoint(endPointType : String) : Int;
	
	/** Useful from external BadServerIdHandlers which need
		* to pick a particular port type.
		*/
	@:overload public function getServerPortForType(location : com.sun.corba.se.PortableActivationIDL.LocatorPackage.ServerLocationPerORB, endPointType : String) : Int;
	
	
}
